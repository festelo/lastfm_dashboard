name: Android CI/CD

on: [push, pull_request]

defaults:
  run:
    shell: bash
    working-directory: lastfm_dashboard_app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1.3.0
      with:
        channel: beta

    - name: Pub get for infrastructure
      run: flutter pub get
      working-directory: lastfm_dashboard_infrastructure
    - name: Build codegen for infrastructure
      run: flutter packages pub run build_runner build
      working-directory: lastfm_dashboard_infrastructure

    - name: Flutter get dependencies
      run: flutter pub get
    - name: Set application build number
      run: flutter pub run pubspec_semver:set_build ${{ github.run_id }}
    - name: Flutter config generate
      run: flutter pub run environment_config:generate
      env:
          LAST_FM_API_KEY: ${{ secrets.LAST_FM_API_KEY }}
    - name: Flutter build
      run: flutter build apk
    - name: Upload build artifact
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: ./lastfm_dashboard_app/build/app/outputs/apk/release/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
        with:
            persist-credentials: false
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Get application version
        id: app_ver
        run: echo "::set-output name=app_ver::" "$(flutter pub run pubspec_semver:get_ver)"
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ github.run_id }}"
          release_name: "Build ${{ steps.app_ver.outputs.app_ver }} (${{ github.run_id }})"
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/app-release.apk
          asset_name: ${{ steps.app_ver.outputs.app_ver }}_${{ github.run_id }}.apk
          asset_content_type: application/zip